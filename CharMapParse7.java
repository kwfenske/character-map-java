/*
  Character Map Parse #7 - Quick-and-Dirty Check for Repeated Unicode Numbers
  Written by: Keith Fenske, http://kwfenske.github.io/
  Wednesday, 9 January 2019
  Java class name: CharMapParse7
  Copyright (c) 2019 by Keith Fenske.  Apache License or GNU GPL.

  This is a quick-and-dirty Java 1.4 console application to parse a data file
  for the CharMap4 Java application, to find lines where a Unicode character
  number is repeated.  For example:

      U+FA0E = CJK Compatibility Ideograph-FA0E

  These lines are unnecessary and should be deleted, as they provide no more
  information than the default captions generated by CharMap4.

  Put the data file name as the first parameter on the command line.  The file
  should be in US-ASCII plain text or encoded as UTF-8.  Results will appear on
  standard output.

  Written for Unicode 11.0.0 (2018); the exact version is not important.  This
  source file should only be distributed with the source for CharMap4.  General
  users have no need for the CharMapParse7 application.  THIS CODE IS UGLY AND
  SHOULD *NOT* BE USED AS THE BASIS FOR ANY OTHER PROGRAMS.

  Apache License or GNU General Public License
  --------------------------------------------
  CharMapParse7 is free software and has been released under the terms and
  conditions of the Apache License (version 2.0 or later) and/or the GNU
  General Public License (GPL, version 2 or later).  This program is
  distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY,
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the license(s) for more details.  You should have
  received a copy of the licenses along with this program.  If not, see the
  http://www.apache.org/licenses/ and http://www.gnu.org/licenses/ web pages.
*/

import java.io.*;                 // standard I/O
import java.util.regex.*;         // regular expressions

public class CharMapParse7
{
  public static void main(String[] args)
  {
    int found;                    // number of repeats found
    BufferedReader input;         // input character stream
    String line;                  // one line of text from input file
    Matcher matcher;              // pattern matcher for <pattern>
    Pattern pattern;              // compiled regular expression

    found = 0;                    // no repeats found yet
    if (args.length > 0) try      // catch specific and general I/O errors
    {
      input = new BufferedReader(new InputStreamReader(new FileInputStream(
        args[0]), "UTF-8"));      // user's plain text data file
      pattern = Pattern.compile("^\\s*[Uu]\\+([0-9A-Fa-f]+)\\s*=\\s*(.*)$");
      while ((line = input.readLine()) != null) // read one line from file
      {
        matcher = pattern.matcher(line); // only want specific lines
        if (matcher.find())       // if this line has correct syntax
        {
          if (matcher.group(2).toLowerCase() // look for repeats
            .indexOf(matcher.group(1).toLowerCase()) >= 0)
          {
            System.out.println(line); // echo line for user to inspect
            found ++;             // one more repeat found
          }
        }
      }
      input.close();              // try to close input file
      System.out.println("Found " + found
        + " repeats of Unicode character numbers.");
    }
    catch (IOException ioe)       // all other I/O errors
    {
      System.err.println("File I/O error: " + ioe.getMessage());
    }
    else
      System.err.println(
        "CharMap4 data file name must be first parameter on command line.");

  } // end of main() method

} // end of CharMapParse7 class

/* Copyright (c) 2019 by Keith Fenske.  Apache License or GNU GPL. */
